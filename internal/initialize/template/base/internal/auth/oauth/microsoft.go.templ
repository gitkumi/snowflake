package oauth

import (
	"context"
	"fmt"

	"golang.org/x/oauth2"
	"golang.org/x/oauth2/microsoft"
)

const MicrosoftUserInfoURL = "https://graph.microsoft.com/v1.0/me"

func NewMicrosoftProvider(config *oauth2.Config) *Provider {
	config.Endpoint = microsoft.AzureADEndpoint("common")
	providerConfig := ProviderConfig{
		RequirePKCE: false,
		Scopes:      []string{"openid", "email", "profile"},
	}
	return NewProvider(
		"microsoft",
		config,
		fetchMicrosoftUserInfo,
		providerConfig,
		oauth2.SetAuthURLParam("response_mode", "query"),
	)
}

type MicrosoftUserInfo struct {
	ID                string `json:"id"`
	Email             string `json:"email"`
	EmailVerified     bool   `json:"email_verified"`
	DisplayName       string `json:"display_name"`
	GivenName         string `json:"given_name"`
	Surname           string `json:"surname"`
	PictureURL        string `json:"picture_url"`
	PreferredLanguage string `json:"preferred_language"`
	Provider          string `json:"provider"`
}

func fetchMicrosoftUserInfo(ctx context.Context, config *oauth2.Config, token *oauth2.Token) (any, error) {
	var resp struct {
		ID                string `json:"id"`
		DisplayName       string `json:"displayName"`
		GivenName         string `json:"givenName"`
		Surname           string `json:"surname"`
		Email             string `json:"mail"`
		UserPrincipalName string `json:"userPrincipalName"`
		PreferredLanguage string `json:"preferredLanguage"`
	}

	if err := FetchUserInfo(ctx, config, token, MicrosoftUserInfoURL, &resp); err != nil {
		return nil, err
	}

	picture := fmt.Sprintf("https://graph.microsoft.com/v1.0/users/%s/photo/$value", resp.ID)

	email := resp.Email
	if email == "" {
		email = resp.UserPrincipalName
	}

	return &MicrosoftUserInfo{
		ID:                resp.ID,
		Email:             email,
		EmailVerified:     true,
		DisplayName:       resp.DisplayName,
		GivenName:         resp.GivenName,
		Surname:           resp.Surname,
		PictureURL:        picture,
		PreferredLanguage: resp.PreferredLanguage,
		Provider:          "microsoft",
	}, nil
}
