name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Install dependencies
        run: |
          go install github.com/sqlc-dev/sqlc/cmd/sqlc@latest
          go install github.com/a-h/templ/cmd/templ@latest

      - name: Run tests
        run: go test -v ./...

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Build binaries
        run: |
          # Create dist directory
          mkdir -p dist
          
          # Build for multiple platforms
          PLATFORMS="linux/amd64 linux/arm64 darwin/amd64 darwin/arm64 windows/amd64"
          for platform in $PLATFORMS; do
            IFS='/' read -r -a parts <<< "$platform"
            GOOS="${parts[0]}"
            GOARCH="${parts[1]}"
            
            if [ "$GOOS" = "windows" ]; then
              EXTENSION=".exe"
            else
              EXTENSION=""
            fi
            
            OUTPUT="dist/snowflake_${GOOS}_${GOARCH}${EXTENSION}"
            
            echo "Building for $GOOS/$GOARCH..."
            GOOS=$GOOS GOARCH=$GOARCH go build -ldflags="-X 'github.com/gitkumi/snowflake/cmd/cli.version=${{ steps.get_version.outputs.VERSION }}'" -o "$OUTPUT" ./main.go
          done
          
          # Create SHA256 checksums
          cd dist
          sha256sum * > SHA256SUMS

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            dist/*

      - name: Publish to Go proxy
        run: GOPROXY=proxy.golang.org go list -m github.com/gitkumi/snowflake@${{ steps.get_version.outputs.VERSION }} 