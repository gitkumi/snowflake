{{ if eq .Database "sqlite3" }}
-- name: ListUsers :many
SELECT * FROM users
ORDER BY id;

-- name: GetUser :one
SELECT * FROM users
WHERE id = ? LIMIT 1;

-- name: GetUserByEmail :one
SELECT * FROM users
WHERE email = ? LIMIT 1;

-- name: CreateUser :one
INSERT INTO users (
  email, username, hashed_password, first_name, last_name
) VALUES (
  ?, ?, ?, ?, ?
)
RETURNING *;

-- name: UpdateUser :one
UPDATE users
SET email = ?,
    username = ?,
    hashed_password = ?,
    first_name = ?,
    last_name = ?,
    confirmed_at = ?
WHERE id = ?
RETURNING *;

-- name: DeleteUser :exec
DELETE FROM users
WHERE id = ?;

{{ else if eq .Database "mysql" }}
-- name: ListUsers :many
SELECT * FROM users
ORDER BY id;

-- name: GetUser :one
SELECT * FROM users
WHERE id = ? LIMIT 1;

-- name: GetUserByEmail :one
SELECT * FROM users
WHERE email = ? LIMIT 1;

-- name: CreateUser :exec
INSERT INTO users (
  email, username, hashed_password, first_name, last_name
) VALUES (
  ?, ?, ?, ?, ?
);

-- name: UpdateUser :exec
UPDATE users
SET email = ?,
    username = ?,
    hashed_password = ?,
    first_name = ?,
    last_name = ?,
    confirmed_at = ?
WHERE id = ?;

-- name: DeleteUser :exec
DELETE FROM users
WHERE id = ?;

{{ else if eq .Database "postgres" }}
-- name: ListUsers :many
SELECT * FROM users
ORDER BY id;

-- name: GetUser :one
SELECT * FROM users
WHERE id = $1 LIMIT 1;

-- name: GetUserByEmail :one
SELECT * FROM users
WHERE email = $1 LIMIT 1;

-- name: CreateUser :one
INSERT INTO users (
  email, username, hashed_password, first_name, last_name
) VALUES (
  $1, $2, $3, $4, $5
)
RETURNING *;

-- name: UpdateUser :one
UPDATE users
SET email = $1,
    username = $2,
    hashed_password = $3,
    first_name = $4,
    last_name = $5,
    confirmed_at = $6
WHERE id = $7
RETURNING *;

-- name: DeleteUser :exec
DELETE FROM users
WHERE id = $1;
{{ end }}
