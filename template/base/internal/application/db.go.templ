package application

import (
	"{{ .Name }}/static"
	"database/sql"
	"time"

	"github.com/pressly/goose/v3"
)

type DBConfig struct {
	DatabaseConnString string
	MigrateDatabase    bool
}

func NewDB(cfg *DBConfig) (*sql.DB, error) {
	db, err := sql.Open("{{ .Database.Driver }}", cfg.DatabaseConnString)
	if err != nil {
		return nil, err
	}

	db.SetMaxOpenConns(25)
	db.SetMaxIdleConns(25)
	db.SetConnMaxLifetime(2 * time.Minute)

	if cfg.MigrateDatabase {
		goose.SetBaseFS(static.Migration)

		if err := goose.SetDialect("{{ .Database.Driver }}"); err != nil {
			return nil, err
		}

		if err := goose.Up(db, "sql/migrations"); err != nil {
			return nil, err
		}
	}

	return db, nil
} 
